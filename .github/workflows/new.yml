name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: 'ap-northeast-3'  # Change to your region
  EC2_INSTANCE_ID: 'i-0b738fb343e6f02ba'
  RDS_ENDPOINT: ${{ secrets.RDS_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USERNAME: ${{ secrets.RDS_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies (if using Composer)
      run: |
        sudo apt-get update
        sudo apt-get install -y zip unzip
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
        composer install --no-dev --optimize-autoloader

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create deployment package
      run: |
        # Exclude files not needed in production
        zip -r deployment.zip . -x '.git/*' -x '.github/*' -x 'tests/*' -x '*.env'
        

    - name: Deploy to EC2 instance
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "deployment.zip"
        target: "/home/${{ secrets.EC2_USER }}/deployment.zip"

    - name: SSH and deploy on EC2
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Unzip deployment
          unzip -o /home/${{ secrets.EC2_USER }}/deployment.zip -d /var/www/html/
          
          # Set up environment variables
          echo "DB_HOST=${{ env.RDS_ENDPOINT }}" > /var/www/html/.env
          echo "DB_NAME=${{ env.DB_NAME }}" >> /var/www/html/.env
          echo "DB_USER=${{ secrets.RDS_USERNAME }}" >> /var/www/html/.env
          echo "DB_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> /var/www/html/.env
          
          # Set permissions (adjust based on your web server user)
          chown -R www-data:www-data /var/www/html
          chmod -R 755 /var/www/html
          
          # Restart web server (adjust based on your web server)
          sudo systemctl restart apache2  # or nginx if using nginx
          
          # Run database migrations if needed
          # php /var/www/html/migrations/migrate.php