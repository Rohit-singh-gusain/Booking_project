name: Deploy PHP to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: 'ap-northeast-3'  # Change to your region
  WEB_ROOT: '/var/www/html'  # Change if your web root is different
  RDS_ENDPOINT: ${{ secrets.RDS_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'ap-northeast-3'

    - name: Copy files to EC2 via SCP
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "deployment.zip"
        target: "/tmp/deployment.zip"
        rm: true  # Remove old deployment zip if exists

    - name: SSH and deploy application
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Stop web server temporarily (optional)
          sudo systemctl stop apache2 || sudo systemctl stop nginx
          
          # Backup current deployment (optional)
          sudo cp -r ${{ env.WEB_ROOT }} /var/www/html_backup_$(date +%Y%m%d%H%M%S)
          
          # Clean web root and deploy new version
          sudo rm -rf ${{ env.WEB_ROOT }}/*
          sudo unzip -o /tmp/deployment.zip -d ${{ env.WEB_ROOT }}/
          sudo rm /tmp/deployment.zip
          
          # Set up environment configuration
          echo "DB_HOST=${{ env.RDS_ENDPOINT }}" | sudo tee ${{ env.WEB_ROOT }}/.env
          echo "DB_NAME=${{ env.DB_NAME }}" | sudo tee -a ${{ env.WEB_ROOT }}/.env
          echo "DB_USER=${{ secrets.RDS_USERNAME }}" | sudo tee -a ${{ env.WEB_ROOT }}/.env
          echo "DB_PASSWORD=${{ secrets.RDS_PASSWORD }}" | sudo tee -a ${{ env.WEB_ROOT }}/.env
          
          # Set permissions
          sudo chown -R www-data:www-data ${{ env.WEB_ROOT }}
          sudo chmod -R 755 ${{ env.WEB_ROOT }}
          sudo find ${{ env.WEB_ROOT }} -type d -exec chmod 755 {} \;
          sudo find ${{ env.WEB_ROOT }} -type f -exec chmod 644 {} \;
          
          # Restart web server
          sudo systemctl start apache2 || sudo systemctl start nginx
          
          # Run database migrations if needed (uncomment if you have migrations)
          # cd ${{ env.WEB_ROOT }} && php migrations/migrate.php
          
          # Clean up old backups (keep last 3)
          sudo ls -dt /var/www/html_backup_* | tail -n +4 | sudo xargs rm -rf